53 36
META script_type_update

/// Temporary values
BOOL lmbPressed = fe3d:input_is_mouse_pressed("BUTTON_LEFT")
BOOL cPressed = fe3d:input_is_key_pressed("KEY_C")
BOOL qPressed = fe3d:input_is_key_pressed("KEY_Q")
BOOL ePressed = fe3d:input_is_key_pressed("KEY_E")
BOOL rPressed = fe3d:input_is_key_pressed("KEY_R")

/// Opening or closing building menu
IF cPressed IS <true>:
    IF _isBuilding IS <false>:
        EDIT _isBuilding = <true>
    ELSE:
        EDIT _isBuilding = <false>

/// Toggling rotation
IF rPressed IS <true>:
    IF _buildRotation IS 0.0:
        EDIT _buildRotation = 180.0
    ELSE:
        EDIT _buildRotation = 0.0

/// Hide previous building
fe3d:model_set_visible(_buildables[_buildIndex], <false>)

/// Update building choosing
IF _isBuilding IS <true>:
    IF qPressed IS <true>:
        IF _buildIndex IS 0:
            EDIT _buildIndex = _maxBuildIndex
        ELSE:
            DECR _buildIndex 1
    ELIF ePressed IS <true>:
        IF _buildIndex IS _maxBuildIndex:
            EDIT _buildIndex = 0
        ELSE:
            INCR _buildIndex 1

/// Show current building
IF _isBuilding IS <true>:
    fe3d:model_set_visible(_buildables[_buildIndex], <true>)

/// Update building position & rotation
IF _isBuilding IS <true>:
    VEC3 buildingPos = fe3d:camera_get_position()
    IF _buildRotation IS 0.0:
        DECR buildingPos.x _buildOffsets[_buildIndex]
    ELSE:
        INCR buildingPos.x _buildOffsets[_buildIndex]
    fe3d:model_set_position(_buildables[_buildIndex], buildingPos.x, 0.0, buildingPos.z)
    fe3d:model_set_rotation(_buildables[_buildIndex], 0.0, _buildRotation, 0.0)

/// Update building validation color
IF _isBuilding IS <true>:
    STR c = fe3d:collision_check_model_models(_buildables[_buildIndex], "", "", "")
    IF c NOT "":
        fe3d:model_set_color(_buildables[_buildIndex], 1.0, 0.0, 0.0)
    ELSE:
        fe3d:model_set_color(_buildables[_buildIndex], 0.0, 1.0, 0.0)

/// Update building placing
IF _isBuilding IS <true> AND lmbPressed IS <true>:
    INT counter = _buildCounters[_buildIndex]
    CAST counter STR
    STR newID = misc:concat_strings(_buildables[_buildIndex], counter)
    LIST temp = {"house14","house2","house13","storage","well2","pen"}
    STR previewID = temp[_buildIndex]
    fe3d:model_place(newID, previewID, buildingPos.x, 0.0, buildingPos.z)
    fe3d:model_set_rotation(newID, 0.0, _buildRotation, 0.0)
    fe3d:model_set_max_height(newID, 5.0)
    INCR _buildCounters[_buildIndex] 1
