69 10
META script_type_update

/// Temporary values
VEC3 camPos = fe3d:camera_get_position()
DEC waterHeight = fe3d:water_get_height()
INT scrollDir = fe3d:input_get_mousewheel_direction()
BOOL lmbPressed = fe3d:input_is_mouse_pressed("BUTTON_LEFT")
BOOL rPressed = fe3d:input_is_key_pressed("KEY_R")

/// Update rotation
IF _isBuilding IS <true> AND rPressed IS <true>:
    IF _buildRotation IS 270.0:
        EDIT _buildRotation = 0.0
    ELSE:
        INCR _buildRotation 90.0

/// Hide previous building + text
fe3d:model_set_visible(_buildables[_buildIndex], <false>)
fe3d:text_set_visible(_buildables[_buildIndex], <false>)

/// Update building choosing
IF _isBuilding IS <true>:
    IF scrollDir IS -1:
        IF _buildIndex IS 0:
            EDIT _buildIndex = _maxBuildIndex
        ELSE:
            DECR _buildIndex 1
    ELIF scrollDir IS 1:
        IF _buildIndex IS _maxBuildIndex:
            EDIT _buildIndex = 0
        ELSE:
            INCR _buildIndex 1

/// Show current building
IF _isBuilding IS <true>:
    fe3d:model_set_visible(_buildables[_buildIndex], <true>)

/// Update building position & rotation
IF _isBuilding IS <true>:
    VEC3 buildPos = camPos
    IF _buildRotation IS 0.0:
        DECR buildPos.x _buildOffsets[_buildIndex]
    ELIF _buildRotation IS 90.0:
        INCR buildPos.z _buildOffsets[_buildIndex]
    ELIF _buildRotation IS 180.0:
        INCR buildPos.x _buildOffsets[_buildIndex]
    ELIF _buildRotation IS 270.0:
        DECR buildPos.z _buildOffsets[_buildIndex]
    DEC buildingY = fe3d:terrain_get_pixel_height(buildPos.x, buildPos.z)
    fe3d:model_set_position(_buildables[_buildIndex], buildPos.x, buildingY, buildPos.z)
    fe3d:model_set_rotation(_buildables[_buildIndex], 0.0, _buildRotation, 0.0)

/// Update building validation color
IF _isBuilding IS <true>:
    STR valid = fe3d:collision_check_model_models(_buildables[_buildIndex], "", "", "")
    IF valid NOT "" OR buildingY LESS waterHeight OR _canAffordBuilding IS <false>:
        fe3d:model_set_color(_buildables[_buildIndex], 1.0, 0.0, 0.0)
    ELSE:
        fe3d:model_set_color(_buildables[_buildIndex], 0.0, 1.0, 0.0)

/// Update building placement
IF _isBuilding IS <true> AND lmbPressed IS <true>:
    IF valid IS "":
        INT counter = _buildCounters[_buildIndex]
        CAST counter STR
        STR newID = misc:concat_strings(_buildables[_buildIndex], counter)
        IF _buildIndex IS 0:
            VEC3 size = fe3d:aabb_get_size("small_house_display_back")
            STR previewID = "house14"
        ELIF _buildIndex IS 1:
            VEC3 size = fe3d:aabb_get_size("medium_house_display_back")
            STR previewID = "house2"
        ELIF _buildIndex IS 2:
            VEC3 size = fe3d:aabb_get_size("big_house_display_back")
            STR previewID = "house13"
        ELIF _buildIndex IS 3:
            VEC3 size = fe3d:aabb_get_size("storage_display_main")
            STR previewID = "storage"
        ELIF _buildIndex IS 4:
            VEC3 size = fe3d:aabb_get_size("well_display_well")
            STR previewID = "well2"
        ELIF _buildIndex IS 5:
            VEC3 size = fe3d:aabb_get_size("pen_display_front")
            STR previewID = "pen"
        ELIF _buildIndex IS 6:
            VEC3 size = fe3d:aabb_get_size("mill_display_mill")
            STR previewID = "mill"
        ELIF _buildIndex IS 7:
            VEC3 size = fe3d:aabb_get_size("church_display_front")
            STR previewID = "church"
        fe3d:model_place(newID, previewID, buildPos.x, buildingY, buildPos.z)
        fe3d:model_set_rotation(newID, 0.0, _buildRotation, 0.0)
        DEC height = size.y
        MUL height 0.1
        fe3d:model_set_max_height(newID, height)
        INCR _buildCounters[_buildIndex] 1
        DECR _bag[0] _buildablesWoodPrice[_buildIndex]
        DECR _bag[1] _buildablesStonePrice[_buildIndex]
        DECR _bag[2] _buildablesClayPrice[_buildIndex]
        DECR _bag[7] _buildablesIronPrice[_buildIndex]
