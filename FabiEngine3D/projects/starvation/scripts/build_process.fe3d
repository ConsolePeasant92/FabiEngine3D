9 22
META script_type_update

fe3d:text_set_visible("build", <false>)
STR hoveredID = _hoveredBuildingID
DEC distance = _hoveredBuildingDistance
IF hoveredID NOT "":
    /// Retrieve hovered building properties
    DEC height = fe3d:model_get_max_height(hoveredID)
    STR idPart = misc:get_string_part(hoveredID, 0, 2)
    IF idPart IS "sm":
        INT hoveredIndex = 0
        VEC3 size = fe3d:aabb_get_size("small_house_display_back")
    ELIF idPart IS "me":
        INT hoveredIndex = 1
        VEC3 size = fe3d:aabb_get_size("medium_house_display_back")
    ELIF idPart IS "bi":
        INT hoveredIndex = 2
        VEC3 size = fe3d:aabb_get_size("big_house_display_back")
    ELIF idPart IS "st":
        INT hoveredIndex = 3
        VEC3 size = fe3d:aabb_get_size("storage_display_main")
    ELIF idPart IS "we":
        INT hoveredIndex = 4
        VEC3 size = fe3d:aabb_get_size("well_display_well")
    ELIF idPart IS "pe":
        INT hoveredIndex = 5
        VEC3 size = fe3d:aabb_get_size("pen_display_front")
    ELIF idPart IS "mi":
        INT hoveredIndex = 6
        VEC3 size = fe3d:aabb_get_size("mill_display_mill")
    ELIF idPart IS "ch":
        INT hoveredIndex = 7
        VEC3 size = fe3d:aabb_get_size("church_display_tower")
    ELIF idPart IS "ov":
        INT hoveredIndex = 8
        VEC3 size = fe3d:aabb_get_size("oven_display_oven")
    ELIF idPart IS "ca":
        INT hoveredIndex = 9
        VEC3 size = fe3d:aabb_get_size("campfire_display_campfire")
    /// Calculate price
    INT wp = _buildablesWoodPrice[hoveredIndex]
    INT sp = _buildablesStonePrice[hoveredIndex]
    INT cp = _buildablesClayPrice[hoveredIndex]
    INT ip = _buildablesIronPrice[hoveredIndex]
    DECR wp 1
    DECR sp 1
    DECR cp 1
    DECR ip 1
    BOOL afford1 = (_bag[0] MORE wp AND _bag[1] MORE sp)
    BOOL afford2 = (_bag[2] MORE cp AND _bag[9] MORE ip)
    BOOL canAfford = (afford1 IS <true> AND afford2 IS <true>)
    /// Check if building in reach, not finished yet, affordable
    IF distance LESS _maxReach AND height LESS size.y AND canAfford IS <true>:
        fe3d:text_set_visible("build", <true>)
        /// Check if player used hammer
        IF _wasHammerPlaying IS <true> AND _isHammerPlaying IS <false>:
            /// Increase building height
            DEC heightIncrease = size.y
            MUL heightIncrease 0.1000001
            INCR height heightIncrease
            fe3d:model_set_max_height(hoveredID, height)
            /// Pay the price
            DECR _bag[0] _buildablesWoodPrice[hoveredIndex]
            DECR _bag[1] _buildablesStonePrice[hoveredIndex]
            DECR _bag[2] _buildablesClayPrice[hoveredIndex]
            DECR _bag[9] _buildablesIronPrice[hoveredIndex]
            DECR _durabilities[6] _durabilityHit
            /// Check if building is finished & apply effects
            IF height IS size.y OR height MORE size.y:
                IF idPart IS "sm" OR idPart IS "me" OR idPart IS "bi":
                    STR bedID = misc:concat_strings("bed:", hoveredID)
                    VEC3 bedPos = fe3d:model_get_position(hoveredID)
                    fe3d:model_place(bedID, "bed", bedPos.x, bedPos.y, bedPos.z)
                ELIF idPart IS "mi":
                    fe3d:model_start_animation(hoveredID, "mill_rotation", -1)
                ELIF idPart IS "ov":
                    STR fireID = misc:concat_strings("fire:", hoveredID)
                    STR smokeID = misc:concat_strings("smoke:", hoveredID)
                    VEC3 pos = fe3d:model_get_position(hoveredID)
                    INCR pos.y 0.5
                    fe3d:billboard_place(fireID, "fire2", pos.x, pos.y, pos.z)
                    fe3d:billboard_start_animation(fireID, -1)
                    INCR pos.y 3.0
                    fe3d:billboard_place(smokeID, "smoke", pos.x, pos.y, pos.z)
                    fe3d:billboard_start_animation(smokeID, -1)
                ELIF idPart IS "ca":
                    STR firstFireID = misc:concat_strings("fire3_1:", hoveredID)
                    STR secondFireID = misc:concat_strings("fire3_2:", hoveredID)
                    VEC3 pos = fe3d:model_get_position(hoveredID)
                    fe3d:billboard_place(firstFireID, "fire3", pos.x, pos.y, pos.z)
                    fe3d:billboard_place(secondFireID, "fire3", pos.x, pos.y, pos.z)
                    fe3d:billboard_set_rotation(firstFireID, 0.0, 90.0, 0.0)
                    fe3d:billboard_set_aabb_collision_responsive(firstFireID, <false>)
                    fe3d:billboard_set_aabb_collision_responsive(secondFireID, <false>)
                    fe3d:billboard_start_animation(firstFireID, -1)
                    fe3d:billboard_start_animation(secondFireID, -1)
                    STR ID = hoveredID
                    INCR pos.y 3.0
                    fe3d:light_place(ID, pos.x, pos.y, pos.z, 1.0, 0.85, 0.0, 1.5, 3.0)
